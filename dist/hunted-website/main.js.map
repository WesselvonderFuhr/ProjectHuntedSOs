{"version":3,"sources":["./src/app/components/sidenav/sidenav.component.ts","./src/app/components/sidenav/sidenav.component.html","./src/app/models/accesscode_post.model.ts","./src/app/components/setup-accesscode/setup-accesscode.component.ts","./src/app/components/setup-accesscode/setup-accesscode.component.html","./src/app/components/setup-jail/setup-jail.component.ts","./src/app/components/setup-jail/setup-jail.component.html","./src/app/services/auth/auth.service.ts","./src/environments/environment.ts","./src/app/models/jail.model.ts","./src/app/services/zone/zone.service.ts","./src/app/models/loot.model.ts","./src/app/components/setup-zone/setup-zone.component.ts","./src/app/components/setup-zone/setup-zone.component.html","./src/app/services/jail/jail.service.ts","./src/app/services/game/game.service.ts","./src/app/components/setup-qr/setup-qr.component.ts","./src/app/components/setup-qr/setup-qr.component.html","./src/app/helpers/authconfig.interceptor.ts","./src/app/models/time.model.ts","./src/app/models/accesscode.model.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/services/loot/loot.service.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/app.module.ts","./src/app/components/setup-time/setup-time.component.ts","./src/app/components/setup-time/setup-time.component.html","./src/app/components/game-out-of-bounds-message/game-out-of-bounds-message.component.html","./src/app/components/game-out-of-bounds-message/game-out-of-bounds-message.component.ts","./src/app/services/player/player.service.ts","./src/app/components/game/game.component.ts","./src/app/components/game/game.component.html","./src/app/components/setup/setup.component.ts","./src/app/components/setup/setup.component.html","./src/app/components/setup-qr-card/setup-qr-card.component.ts","./src/app/components/setup-qr-card/setup-qr-card.component.html","./src/app/services/access-code/accesscode.service.ts","./src/app/components/setup-accesscode-card/setup-accesscode-card.component.ts","./src/app/components/setup-accesscode-card/setup-accesscode-card.component.html","./src/app/app-routing.module.ts","./src/app/helpers/auth-guard/auth.guard.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthService) {\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout()\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"(isHandset$ | async) === false\">\r\n    <mat-toolbar color=\"primary\">Hunted</mat-toolbar>\r\n    <mat-nav-list>\r\n      <a *ngIf=\"this.authService.isLoggedIn\" mat-list-item href=\"/setup\"><mat-icon>settings</mat-icon><span>Configuratie</span></a>\r\n      <a *ngIf=\"this.authService.isLoggedIn\" mat-list-item href=\"/game\"><mat-icon>gamepad</mat-icon><span>Spel</span></a>\r\n      <a *ngIf=\"this.authService.isLoggedIn\" mat-list-item href=\"\" (click)=\"logout()\"><mat-icon>account_circle</mat-icon><span>Log uit</span></a>\r\n      <a *ngIf=\"!this.authService.isLoggedIn\" mat-list-item href=\"/login\"><mat-icon>account_circle</mat-icon><span>Log in</span></a>\r\n\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span></span>\r\n    </mat-toolbar>\r\n    <div class=\"wrapper\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","export class AccessCodePost {\r\n    amount: number;\r\n    role: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AccessCodePost } from 'src/app/models/accesscode_post.model';\r\nimport { AccessCode } from 'src/app/models/accesscode.model';\r\nimport { AccessCodeService } from 'src/app/services/access-code/accesscode.service'\r\n\r\n@Component({\r\n  selector: 'app-setup-accesscode',\r\n  templateUrl: './setup-accesscode.component.html',\r\n  styleUrls: ['./setup-accesscode.component.scss']\r\n})\r\nexport class SetupAccesscodeComponent implements OnInit {\r\n  public accessCodePost: AccessCodePost;\r\n  public accessCodes: AccessCode[];\r\n  public showSaveConfirmation = false;\r\n\r\n  constructor(private accessCodeService: AccessCodeService) {\r\n    this.accessCodePost = new AccessCodePost();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.accessCodeService.getAllCodes().subscribe((res) => {\r\n      this.accessCodes = res;\r\n      if(this.accessCodes)\r\n        this.accessCodes.sort(this.compare)\r\n    });\r\n  }\r\n\r\n  createNewCodes(): void {\r\n    this.resetConfirmations();\r\n\r\n    let accessCodePost = new AccessCodePost();\r\n    accessCodePost = this.accessCodePost;\r\n\r\n    this.accessCodeService.generateCodes(this.accessCodePost).subscribe((res) => {\r\n      console.log('Added ' + this.accessCodePost.amount + ' new ' + this.accessCodePost.role + ' access codes!');\r\n      this.ngOnInit();\r\n      this.showSaveConfirmation = true;\r\n    });\r\n  }\r\n\r\n  resetConfirmations(): void {\r\n    this.showSaveConfirmation = false;\r\n  }\r\n\r\n  compare(a: AccessCode, b: AccessCode ) {\r\n    if ( a.role < b.role ){\r\n      return 1;\r\n    }\r\n    if ( a.role > b.role ){\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<h2>Toegangscodes</h2>\r\n<div>\r\n  <form class=\"example-form\" #accessCodeData=\"ngForm\" (ngSubmit)=\"createNewCodes()\" >\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Rol</mat-label>\r\n      <mat-select [(value)]=\"accessCodePost.role\">\r\n        <mat-option value=\"Agent\">Agent</mat-option>\r\n        <mat-option value=\"Boef\">Boef</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <br/>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Aantal</mat-label>\r\n      <mat-select [(value)]=\"accessCodePost.amount\">\r\n        <mat-option value=\"1\">1</mat-option>\r\n        <mat-option value=\"2\">2</mat-option>\r\n        <mat-option value=\"3\">3</mat-option>\r\n        <mat-option value=\"4\">4</mat-option>\r\n        <mat-option value=\"5\">5</mat-option>\r\n        <mat-option value=\"6\">6</mat-option>\r\n        <mat-option value=\"7\">7</mat-option>\r\n        <mat-option value=\"8\">8</mat-option>\r\n        <mat-option value=\"9\">9</mat-option>\r\n        <mat-option value=\"10\">10</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <br/>\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" color=\"primary\">Opslaan</button>\r\n </form>\r\n</div>\r\n<h4 class=\"mat-h4\" *ngIf=\"showSaveConfirmation\">Toegangscode(s) aangemaakt</h4>\r\n<div class=\"container\">\r\n  <app-setup-accesscode-card *ngFor=\"let accessCode of accessCodes\" [accessCode]=\"accessCode\"></app-setup-accesscode-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { from, Subscriber, VirtualTimeScheduler } from 'rxjs';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { JailService } from 'src/app/services/jail/jail.service';\r\nimport { Jail } from 'src/app/models/jail.model';\r\nimport { Location } from 'src/app/models/jail.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-setup-jail',\r\n  templateUrl: './setup-jail.component.html',\r\n  styleUrls: ['./setup-jail.component.scss']\r\n})\r\nexport class SetupJailComponent implements OnInit {\r\n\r\n  public location: Location;\r\n  public showConfirmation = false\r\n\r\n  constructor(private jailService: JailService) {\r\n    this.location = new Location();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onClickSubmit(): void {\r\n    this.showConfirmation = false;\r\n    const jail = new Jail();\r\n    jail.location = this.location;\r\n\r\n    this.jailService.updateJail(jail).subscribe( (res) => {\r\n      console.log('Updated the jail');\r\n      this.showConfirmation = true;\r\n   });\r\n  }\r\n}\r\n","<h2>Gevangenis</h2>\r\n<div>\r\n  <form class=\"example-form\" #locationData=\"ngForm\" (ngSubmit)=\"onClickSubmit()\" >\r\n    <mat-form-field class=\"example-full-width\" appearance=\"standard\">\r\n      <mat-label>Breedtegraad</mat-label>\r\n      <input matInput [(ngModel)]=\"location.latitude\" name=\"latitude\" placeholder=\"51.-------\">\r\n    </mat-form-field>\r\n    <br/>\r\n    <mat-form-field class=\"example-full-width\" appearance=\"standard\">\r\n      <mat-label>Lengtegraad</mat-label>\r\n      <input matInput [(ngModel)]=\"location.longitude\" name=\"longitude\" placeholder=\"5.-------\">\r\n    </mat-form-field>\r\n    <br/>\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" color=\"primary\">Gevangenis opslaan</button>\r\n\r\n    <h4 class=\"mat-h4\" *ngIf=\"showConfirmation\">Gevangenis opgeslagen</h4>\r\n </form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { User } from '../../models/user.model';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  endpoint: string = environment.apiUrl;\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  currentUser = {};\r\n\r\n  constructor(private http: HttpClient, public router: Router) {\r\n  }\r\n\r\n  login(user: User){\r\n    return this.http.post<any>(`${this.endpoint}/game/authenticate?name=${user.name}&code=${user.code}`,'{}')\r\n      .subscribe((res: any) => {\r\n        localStorage.setItem('access_token', res.token)\r\n        this.router.navigate(['setup']);\r\n      })\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    let authToken = localStorage.getItem('access_token');\r\n    return (authToken !== null) ? true : false;\r\n  }\r\n\r\n  logout() {\r\n    let removeToken = localStorage.removeItem('access_token');\r\n    if (removeToken == null) {\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n  // Error\r\n  handleError(error: HttpErrorResponse) {\r\n    let msg = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      msg = error.error.message;\r\n    } else {\r\n      // server-side error\r\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    return throwError(msg);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://apihuntedsos.herokuapp.com'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class Location {\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\nexport class Jail {\r\n    location: Location;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Playfield } from '../../models/zone.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ZoneService {\r\n\r\n  private zoneUrl = `${environment.apiUrl}/game/playfield`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getZone(): Observable<Playfield> {\r\n    return this.http.get<Playfield>(this.zoneUrl);\r\n  }\r\n\r\n  updateZone(map: string) {\r\n    map = map.split('lat').join('latitude');\r\n    map = map.split('lng').join('longitude');\r\n    let mapModel = { playfield: JSON.parse(map)};\r\n    return this.http.put(this.zoneUrl, mapModel, {responseType: 'text'});\r\n  }\r\n}\r\n","export class Loot {\r\n    _id: string;\r\n    name: string;\r\n}\r\n","import {AfterViewInit, Component} from '@angular/core';\r\nimport {Location, Playfield} from '../../models/zone.model';\r\nimport {ZoneService} from '../../services/zone/zone.service';\r\nimport * as L from 'leaflet';\r\nimport '@geoman-io/leaflet-geoman-free';\r\nimport {LatLng, Layer} from \"leaflet\";\r\n\r\n@Component({\r\n  selector: 'app-setup-zone',\r\n  templateUrl: './setup-zone.component.html',\r\n  styleUrls: ['./setup-zone.component.scss']\r\n})\r\nexport class SetupZoneComponent implements AfterViewInit  {\r\n\r\n  private map: L.Map;\r\n  public showSaveConfirmation = false;\r\n\r\n  constructor(private zoneService: ZoneService) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.map = L.map('map', {\r\n      center: [ 52.155, 5.295 ],\r\n      zoom: 7\r\n    });\r\n\r\n    this.zoneService.getZone().subscribe( (zone: Playfield) => {\r\n      if (zone.playfield[0][0][0].latitude !== undefined){\r\n        const playfields: LatLng[][][] = [];\r\n        for (let i = 0; i < zone.playfield.length; i++){\r\n          const polygons: LatLng[][] = [];\r\n          playfields[i] = polygons;\r\n          for (let j = 0; j < zone.playfield[i].length; j++){\r\n            const latLngs: LatLng[] = [];\r\n            polygons[j] = latLngs;\r\n            for (let k = 0; k < zone.playfield[i][j].length; k++){\r\n              latLngs.push(new LatLng(zone.playfield[i][j][k].latitude, zone.playfield[i][j][k].longitude));\r\n            }\r\n          }\r\n        }\r\n        const polygon = L.polygon(playfields).addTo(this.map);\r\n        this.map.fitBounds(polygon.getBounds());\r\n      } else if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          const coords = position.coords;\r\n          // Offset to center in view.\r\n          const latLong = new LatLng(coords.latitude, coords.longitude);\r\n          this.map.zoomIn(9);\r\n          this.map.panTo(latLong);\r\n        });\r\n      }\r\n    });\r\n\r\n    this.map.pm.setLang('nl');\r\n\r\n    this.map.pm.addControls({\r\n      position: 'bottomleft',\r\n      drawCircle: false,\r\n      drawMarker: false,\r\n      drawCircleMarker: false,\r\n      drawPolyline: false,\r\n      drawRectangle: false\r\n    });\r\n\r\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      maxZoom: 19,\r\n      minZoom: 3,\r\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n    });\r\n\r\n    tiles.addTo(this.map);\r\n  }\r\n\r\n  onClickSubmit(): void {\r\n    this.resetConfirmations();\r\n    const layers = this.map.pm.getGeomanLayers(false) as L.Layer[];\r\n\r\n    const polygons: any[] = [];\r\n\r\n    for (let i = 0; i < layers.length; i++){\r\n      const layer = layers[i] as any;\r\n      polygons.push(layer._latlngs);\r\n    }\r\n\r\n    this.zoneService.updateZone(JSON.stringify(polygons)).subscribe( () => console.log('Updated the zone'));\r\n    this.showSaveConfirmation = true;\r\n  }\r\n\r\n  resetConfirmations(): void {\r\n    this.showSaveConfirmation = false;\r\n  }\r\n}\r\n","<h2>Speelgebied</h2>\r\n<div>\r\n  <div class=\"map-frame\">\r\n    <div id=\"map\"></div>\r\n  </div>\r\n  <button (click)=\"onClickSubmit()\" mat-raised-button color=\"primary\" type=\"submit\" color=\"primary\">Speelgebied opslaan</button>\r\n</div>\r\n<h4 class=\"mat-h4\" *ngIf=\"showSaveConfirmation\">Speelgebied opgeslagen</h4>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Jail } from 'src/app/models/jail.model';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JailService {\r\n\r\n  private jailURL = `${environment.apiUrl}/jail`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getJail(): Observable<any> {\r\n    return this.http.get(this.jailURL);\r\n  }\r\n\r\n  updateJail(jail: Jail) {\r\n    return this.http.put(`${this.jailURL}`, jail, {responseType: 'text'});\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Game } from '../../models/game.model'\r\nimport { Time } from '../../models/time.model';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n\r\n  private gameURL = `${environment.apiUrl}/game`;\r\n  private timeURL =  this.gameURL + '/time';\r\n  private statusURL =  this.gameURL + '/status';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getGame(): Observable<any> {\r\n    return this.http.get(this.gameURL);\r\n  }\r\n\r\n  getStatus(): Observable<any> {\r\n    return this.http.get(this.statusURL);\r\n  }\r\n\r\n  updateTime(time: Time) {\r\n    return this.http.put(this.timeURL, time, {responseType: 'text'});\r\n  }\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { LootService } from 'src/app/services/loot/loot.service';\r\nimport { Loot } from 'src/app/models/loot.model';\r\nimport { NgForm } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'app-setup-qr',\r\n  templateUrl: './setup-qr.component.html',\r\n  styleUrls: ['./setup-qr.component.scss']\r\n})\r\nexport class SetupQrComponent implements OnInit {\r\n\r\n  public lootArray: Loot[];\r\n  public loot: Loot;\r\n  public showSaveConfirmation = false;\r\n\r\n  constructor(private lootService: LootService) {\r\n    this.loot = new Loot();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.lootService.getLoot().subscribe((res) => {\r\n      this.lootArray = res;\r\n    });\r\n  }\r\n\r\n  onClickSubmit(): void {\r\n    this.resetConfirmations();\r\n\r\n    this.lootService.postLoot(this.loot).subscribe((res) => {\r\n      console.log('Added ' + this.loot.name + ' to loot');\r\n      this.ngOnInit();\r\n      this.showSaveConfirmation = true;\r\n    });\r\n  }\r\n\r\n  resetConfirmations(): void {\r\n    this.showSaveConfirmation = false;\r\n  }\r\n}\r\n","<h2>Buit toevoegen</h2>\r\n<div>\r\n    <form #lootData=\"ngForm\" (ngSubmit)=\"onClickSubmit()\" >\r\n      <mat-form-field class=\"example-full-width\" appearance=\"standard\">\r\n        <mat-label>Buit</mat-label>\r\n        <input matInput [(ngModel)]=\"loot.name\" name=\"loot\" placeholder=\"Bijv. 'Ketting'\">\r\n      </mat-form-field>\r\n      <br/>\r\n      <button mat-raised-button color=\"primary\" type=\"submit\" color=\"primary\">Buit opslaan</button>\r\n   </form>\r\n</div>\r\n<h4 class=\"mat-h4\" *ngIf=\"showSaveConfirmation\">Buit aangemaakt</h4>\r\n\r\n<h2>Buit overzicht</h2>\r\n<div class=\"container\">\r\n  <app-setup-qr-card *ngFor=\"let loot of lootArray\" [loot]=\"loot\">\r\n  </app-setup-qr-card>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\r\nimport { AuthService } from \"../services/auth/auth.service\";\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const authToken = this.authService.getToken();\r\n        req = req.clone({\r\n            setHeaders: {\r\n                Authorization: \"Bearer \" + authToken\r\n            }\r\n        });\r\n        return next.handle(req);\r\n    }\r\n}","export class Time {\r\n    end_time: Date;\r\n    start_time: Date;\r\n}","export class AccessCode {\r\n    _id: string;\r\n    code: string;\r\n    role: string;\r\n    assignedTo: string;\r\n}","<app-sidenav *ngIf=\"this.authService.isLoggedIn\">\r\n    <router-outlet></router-outlet>\r\n</app-sidenav>\r\n\r\n<router-outlet *ngIf=\"!this.authService.isLoggedIn\"></router-outlet>\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from '../app/services/auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'Hunted';\r\n\r\n  constructor(public authService: AuthService) {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Loot } from 'src/app/models/loot.model';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LootService {\r\n\r\n  private lootURL = `${environment.apiUrl}/loot`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLoot(): Observable<any> {\r\n    return this.http.get(this.lootURL);\r\n  }\r\n\r\n  postLoot(loot: Loot) {\r\n    return this.http.post(`${this.lootURL}`, loot, {responseType: 'text'});\r\n  }\r\n}\r\n\r\n","<mat-card>\r\n    <mat-card-title>Login</mat-card-title>\r\n    <mat-card-content>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n    <p>\r\n        <mat-form-field>\r\n        <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"name\" placeholder=\"Naam\">\r\n        </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n        <mat-form-field>\r\n        <input type=\"text\" matInput placeholder=\"Toegangscode\" formControlName=\"code\">\r\n        </mat-form-field>\r\n    </p>\r\n\r\n    <p *ngIf=\"error\" class=\"error\">\r\n        {{ error }}\r\n    </p>\r\n\r\n    <div class=\"button\">\r\n        <button type=\"submit\"  mat-raised-button color=\"primary\">Login</button>\r\n    </div>\r\n\r\n    </form>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { AuthService } from '../../services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  constructor(public fb: FormBuilder, public authService: AuthService, public router: Router) {\r\n    this.loginForm = this.fb.group({\r\n      name: [''],\r\n      code: ['']\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.loginForm.value)\r\n  }\r\n  @Input() error: string | null;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { QRCodeModule } from 'angularx-qrcode';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\n\r\n//Shared Components\r\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptor } from './helpers/authconfig.interceptor';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\n\r\n//Setup Components\r\nimport { SetupComponent } from './components/setup/setup.component';\r\nimport { SetupJailComponent } from './components/setup-jail/setup-jail.component';\r\nimport { SetupQrComponent } from './components/setup-qr/setup-qr.component';\r\nimport { SetupQrCardComponent } from './components/setup-qr-card/setup-qr-card.component';\r\nimport { SetupZoneComponent } from './components/setup-zone/setup-zone.component';\r\nimport { SetupAccesscodeComponent } from './components/setup-accesscode/setup-accesscode.component';\r\nimport { SetupAccesscodeCardComponent } from './components/setup-accesscode-card/setup-accesscode-card.component';\r\n\r\n//Game Components\r\nimport { GameComponent } from './components/game/game.component';\r\nimport { GameOutOfBoundsMessageComponent } from './components/game-out-of-bounds-message/game-out-of-bounds-message.component';\r\n\r\n//Service Components\r\nimport { ZoneService } from './services/zone/zone.service';\r\nimport { JailService } from './services/jail/jail.service';\r\nimport { LootService } from './services/loot/loot.service';\r\nimport { AccessCodeService } from './services/access-code/accesscode.service'\r\n\r\n//Material Components\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatSelectModule } from '@angular/material/select'\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nimport { SetupTimeComponent } from './components/setup-time/setup-time.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SetupComponent,\r\n    SetupJailComponent,\r\n    SetupQrComponent,\r\n    SetupQrCardComponent,\r\n    SetupAccesscodeComponent,\r\n    SetupAccesscodeCardComponent,\r\n    GameComponent,\r\n    GameOutOfBoundsMessageComponent,\r\n    SetupZoneComponent,\r\n    SidenavComponent,\r\n    LoginComponent,\r\n    SetupTimeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    QRCodeModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule\r\n  ],\r\n  providers: [\r\n    ZoneService,\r\n    JailService,\r\n    LootService,\r\n    AccessCodeService,\r\n    HttpClientModule,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Time } from 'src/app/models/time.model';\r\nimport { GameService } from 'src/app/services/game/game.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-setup-time',\r\n  templateUrl: './setup-time.component.html',\r\n  styleUrls: ['./setup-time.component.scss']\r\n})\r\nexport class SetupTimeComponent implements OnInit {\r\n\r\n  public time: Time;\r\n  public gameStatus: string;\r\n  private mySubscription: any;\r\n\r\n  constructor(private gameService: GameService, private router: Router) {\r\n    this.time = new Time();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStatus();\r\n\r\n  }\r\n\r\n  onClickSubmit(): void {\r\n    this.time.start_time = new Date();\r\n\r\n    if(confirm(\"Spel starten?\")) {\r\n      this.gameService.updateTime(this.time).subscribe( (res) => {\r\n        console.log('Updated the time - Game has now started');\r\n        this.ngOnInit();\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  endGame(): void {\r\n    if(confirm(\"Spel beeindigen?\")) {\r\n      let time = new Time();\r\n      time.start_time = new Date(0);\r\n      time.end_time = new Date();\r\n      this.gameService.updateTime(time).subscribe( (res) => {\r\n        console.log(\"Updated end time - Game has now ended\")\r\n        this.ngOnInit();\r\n      });\r\n    }\r\n  }\r\n\r\n  restartGame(): void {\r\n    if(confirm(\"Spel herstarten?\")) {\r\n      let time = new Time();\r\n      time.start_time = new Date(0);\r\n      time.end_time = new Date(0);\r\n      this.gameService.updateTime(time).subscribe( (res) => {\r\n        console.log(\"Updated end time - Game has now restarted\")\r\n        this.ngOnInit();\r\n      });\r\n    }\r\n  }\r\n\r\n  getStatus(): any {\r\n    this.gameService.getStatus().subscribe( (res) => {\r\n      this.gameStatus = res;\r\n    });\r\n  }\r\n}\r\n","\r\n<div *ngIf=\"gameStatus == 'not started'\">\r\n  <h2>Spel starten</h2>\r\n  <form class=\"example-form\" #locationData=\"ngForm\" (ngSubmit)=\"onClickSubmit()\" >\r\n    <mat-form-field class=\"example-full-width\" appearance=\"standard\">\r\n      <mat-label>Eindtijd</mat-label>\r\n      <!-- <input matInput [(ngModel)]=\"time.end_time\" name=\"end_time\" placeholder=\"2021-04-20T16:20:00.336Z\"> -->\r\n      <input matInput type=\"datetime-local\" [(ngModel)]=\"time.end_time\" name=\"end_time\" placeholder=\"end date\">\r\n    </mat-form-field>\r\n    <br/>\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" color=\"primary\" [routerLink]=\"['']\">Spel starten</button>\r\n </form>\r\n</div>\r\n\r\n<div *ngIf=\"gameStatus == 'in progress'\">\r\n  <h2>Spel is bezig!</h2>\r\n  <button  mat-raised-button color=\"primary\" type=\"submit\" color=\"primary\" (click)=\"endGame()\" [routerLink]=\"['']\">Spel beëindigen</button>\r\n</div>\r\n\r\n<div *ngIf=\"gameStatus == 'stopped'\">\r\n  <h2>Het spel is afgelopen! Herstarten?</h2>\r\n  <button  mat-raised-button color=\"primary\" type=\"submit\" color=\"primary\" (click)=\"restartGame()\" [routerLink]=\"['']\">Herstart spel</button>\r\n</div>\r\n\r\n","<h3>Spelers buiten Speelgebied</h3>\r\n<div *ngFor=\"let message of OutOfBoundsPlayerArray\">\r\n    <p>{{message}}</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Player } from 'src/app/models/player.model';\r\nimport { PlayerService } from 'src/app/services/player/player.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-game-out-of-bounds-message',\r\n  templateUrl: './game-out-of-bounds-message.component.html',\r\n  styleUrls: ['./game-out-of-bounds-message.component.scss']\r\n})\r\nexport class GameOutOfBoundsMessageComponent implements OnInit {\r\n\r\n  public checkForPlayers = true;\r\n  public OutOfBoundsPlayerArray: Player[];\r\n\r\n  constructor(private playerService: PlayerService) {\r\n  }\r\n\r\n  async ngOnInit() {\r\n    while(this.checkForPlayers){\r\n      await this.checkPlayersOutOfBounds();\r\n      await this.sleep(5000);\r\n    }\r\n  }\r\n\r\n  checkPlayersOutOfBounds(){\r\n    this.playerService.getPlayersOutOfBounds().toPromise().then(result =>{\r\n      this.OutOfBoundsPlayerArray = result;\r\n      })\r\n  }\r\n\r\n   sleep(ms : number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n\r\n  private playerURL = `${environment.apiUrl}/player`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPlayers(): Observable<any> {\r\n    return this.http.get(this.playerURL);\r\n  }\r\n\r\n  getPlayersOutOfBounds(): Observable<any>{\r\n    let APIurl = this.playerURL + \"/outofbounds/\";\r\n    return this.http.get(APIurl);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.scss']\r\n})\r\nexport class GameComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>Spel overzicht</h1>\r\n<app-game-out-of-bounds-message></app-game-out-of-bounds-message>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'app-setup',\r\n  templateUrl: './setup.component.html',\r\n  styleUrls: ['./setup.component.scss']\r\n})\r\nexport class SetupComponent implements OnInit {\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>Spel configureren</h1>\r\n<app-setup-time></app-setup-time>\r\n<app-setup-jail></app-setup-jail>\r\n<app-setup-zone></app-setup-zone>\r\n<app-setup-accesscode></app-setup-accesscode>\r\n<app-setup-qr></app-setup-qr>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { fromEventPattern } from 'rxjs';\r\n\r\nimport { Loot } from 'src/app/models/loot.model';\r\nimport { NgForm } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'app-setup-qr-card',\r\n  templateUrl: './setup-qr-card.component.html',\r\n  styleUrls: ['./setup-qr-card.component.scss']\r\n})\r\nexport class SetupQrCardComponent implements OnInit {\r\n\r\n  @Input() loot: Loot = new Loot;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<p>{{ loot.name }}</p>\r\n<qrcode [qrdata]=\"loot._id\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccessCode } from 'src/app/models/accesscode.model';\r\nimport { AccessCodePost} from 'src/app/models/accesscode_post.model'\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccessCodeService {\r\n\r\n  private accessCodeURL = `${environment.apiUrl}/accesscode`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllCodes(): Observable<any> {\r\n    return this.http.get(this.accessCodeURL);\r\n  }\r\n\r\n  generateCodes(accessCodePost: AccessCodePost){\r\n    return this.http.post(`${this.accessCodeURL}`, accessCodePost);\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AccessCode } from 'src/app/models/accesscode.model'\r\n\r\n@Component({\r\n  selector: 'app-setup-accesscode-card',\r\n  templateUrl: './setup-accesscode-card.component.html',\r\n  styleUrls: ['./setup-accesscode-card.component.scss']\r\n})\r\nexport class SetupAccesscodeCardComponent implements OnInit {\r\n\r\n  @Input() accessCode: AccessCode = new AccessCode;\r\n\r\n  constructor() { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div [className]=\"accessCode.role == 'Boef' ? 'card-red' : 'card-blue'\">\r\n    <h2>{{ accessCode.code }}</h2>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SetupComponent } from './components/setup/setup.component';\r\nimport { GameComponent } from './components/game/game.component';\r\n\r\nimport { AuthGuard } from './helpers/auth-guard/auth.guard'\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path : 'setup', component: SetupComponent, canActivate: [AuthGuard] },\r\n  { path : 'game', component: GameComponent, canActivate: [AuthGuard] },\r\n  { path : 'login', component: LoginComponent, canActivate: [AuthGuard] },\r\n  { path: '',   redirectTo: '/login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot,\r\nUrlTree, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(public authService: AuthService, public router: Router) {\r\n\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if(state.url == '/login') {\r\n      if (this.authService.isLoggedIn == true) {\r\n        this.router.navigate(['setup'])\r\n      }\r\n    } else {\r\n      if (this.authService.isLoggedIn !== true) {\r\n        window.alert(\"U bent niet ingelogd!\");\r\n        this.router.navigate(['login'])\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}